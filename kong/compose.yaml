volumes:
  pgdata:
    name: bulba_pgdata

networks:
  bulba-net:
      driver: bridge
      name: bulba-net

services:

  #######################################
  # Kong API Gateway
  #######################################
  kong:
    image: kong/kong-gateway:3.9
    restart: always
    networks:
      - bulba-net
    environment:
      KONG_DATABASE: "off" # Enable DB-less mode.
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yaml # Path to declarative config.
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000" # Proxy port for APIs.
      - "8001:8001" # Admin API port.
      - "8002:8002" # Kong Manager GUI port.
    volumes:
      - ./kong.yaml:/etc/kong/kong.yaml # Mount kong.yaml into container.

  #######################################
  # Flask Microservices (Bidding, Marketplace, Inventory)
  #######################################

  # Bidding
  bidding-service:
    build:
      context: ../backend/bidding/
    container_name: bidding-service
    restart: always
    networks:
      - bulba-net
    env_file:
      - ../backend/bidding/.env  # Load environment variables from .env file
    ports:
      - "5002:5002"

  # Inventory
  inventory-service:
    build:
      context: ../backend/inventory/
    container_name: inventory-service
    restart: always
    networks:
      - bulba-net
    env_file:
      - ../backend/inventory/.env  # Load environment variables from .env file
    ports:
      - "5003:5003"

  # Marketplace
  marketplace-service:
    build:
      context: ../backend/marketplace/
    container_name: marketplace-service
    restart: always
    networks:
      - bulba-net
    env_file:
      - ../backend/marketplace/.env  # Load environment variables from .env file
    ports:
      - "5004:5004"



  #######################################
  # Redis Cache (For Bidding Microservice)
  #######################################
  redis-cache:
    image: redis:latest
    container_name: redis-cache-service
    restart: always
    networks:
      - bulba-net

